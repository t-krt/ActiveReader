version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
    working_directory: ~/my-portfolio
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/my-portfolio

  test:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: ''
      - image: circleci/mysql:5.7
        command: |
          mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_USER: 'root'
          MYSQL_DATABASE: 'db'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_ROOT_PASSWORD: ''
    working_directory: ~/my-portfolio
    steps:
      - checkout
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: install dockerize
          command: bash .circleci/setup-dockerize.sh
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: run seeds.rb
          command: bundle exec rake db:seed RAILS_ENV=test
      - run:
          name: run tests
          command: bundle exec rspec
      - run:
          name: code check
          command: bundle exec rubocop --require rubocop-rails

  deploy:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run:
          name: install aws
          command: |
            sudo pip install awscli
            aws --version
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Install jq
          command: sudo apt-get install -y jq
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: "Build & Push Docker Image"
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/my-portfolio:latest -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/myportfolio:$CIRCLE_SHA1 .
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/my-portfolio:$CIRCLE_SHA1

      - run:
          name: "DB Migrate"
          command: |
            aws ecs run-task \
              --region ap-northeast-1 \
              --cluster my-portfolio-ecs-cluster \
              --task-definition my-portfolio-taskdefinition_01 \
              --overrides file://ecs/run_task_db_migrate.json

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - checkout_code
      - test:
          requires:
            - checkout_code
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: deploy-aws_with_ecs
